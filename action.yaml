name: 'Setup python with poetry environment'
description: 'Set up an Actions job for Python and Poetry'
inputs:
  python_version:
    description: 'The Python version to install. Defaults to the version stated in the pyproject.toml file.'
    required: false
    default: ''
  project_root:
    description: 'The location of the python project root. Defaults to the root of the project'
    required: false
    default: '.'
  install_cdk:
    description: 'Install the AWS CDK. Defaults to false'
    required: false
    default: '.'
  cache_venv:
    description: 'Cache the .venv directory for use with later workflow runs. Defaults to true'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Setup Python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}
        python-version-file: ${{ inputs.project_root }}/pyproject.toml

    - name: Install Poetry
      id: setup-poetry
      uses: snok/install-poetry@v1.3.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
        virtualenvs-path: ${{ inputs.project_root }}/.venv

    - name: Setup Node
      id: setup-node
      if: ${{ inputs.install_cdk }}
      uses: actions/setup-node@v3

    - name: Install CDK
      id: install_cdk
      if: ${{ inputs.install_cdk }}
      shell: bash
      run: npm install -g aws-cdk

    - name: Load cached venv
      id: cached-venv
      if: ${{ inputs.cache_venv }}
      uses: actions/cache@v3
      with:
        path: ${{ inputs.project_root }}/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-venv.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{ inputs.project_root }}
      run: poetry install --no-interaction --verbose --no-ansi

    - name: Show installed depencies
      shell: bash
      working-directory: ${{ inputs.project_root }}
      run: poetry show --tree --no-ansi
